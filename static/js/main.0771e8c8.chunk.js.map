{"version":3,"sources":["DBManager.js","Chat.js","SomeWebsite.js","LoginForm.js","RegisterForm.js","AgentSystem.js","Loading.js","UserItem.js","UsersListContainer.js","UsersListAndSearch.js","UsersList.js","UsersSystem.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","database","DBManager","getSingleItem","itemName","localStorage","getItem","setSingleItem","newItem","setItem","JSON","stringify","getUsers","onNewUserAdded","ref","on","snap","val","createNewUser","user","push","then","id","key","registerToNewMessages","userId","onNewMessageAdded","setMessages","messages","set","setUnReadMessages","getUnReadMessages","getIsAgentLoggedIn","callback","auth","onAuthStateChanged","getCurrentUser","setCurrentUser","newUser","loginWithEmailAndPassword","email","password","signInWithEmailAndPassword","setOnlineAgent","agent","getOnlineAgent","onAgentLogin","getAgents","once","getCurrentAgent","agents","agentKey","Object","keys","find","currentKey","currentAgent","createNewAgentUser","createUserWithEmailAndPassword","console","log","catch","error","cose","logoutUser","signOut","Chat","state","isChatWindowOpen","valueInput","unReadMessages","ownerId","messagesFromServer","isWithAnimation","length","setState","scrollChatToEnd","toggleChatWindow","props","currentOnlineAgent","alert","userName","owner","prompt","name","updateCurrentUser","addNewMessage","handleKeyDown","e","keyCode","target","value","preventDefault","inputValueElement","innerText","innerHTML","message","time","Date","toISOString","isAgent","newMessage","text","messageOwner","newUnReadMessage","inputValueRef","setMessageContainerRef","messagesContainerElement","options","top","scrollHeight","left","behavior","scrollTo","this","shouldStartOpen","onlineOrOfflineAgent","className","onClick","map","index","textClassName","contentEditable","onKeyDown","Component","SomeWebsite","currentUser","onlineAgent","LoginForm","validationError","login","history","createHandleFieldChange","fieldName","window","addEventListener","onChange","type","placeholder","to","RegisterForm","firstName","lastName","passwordConfirmation","createNewAccount","test","fullName","AgentSystem","match","path","component","Loading","role","aria-label","UserItem","messagesClass","item","style","backgroundImage","onUserClicked","UsersListContainer","users","UsersListAndSearch","handleChange","UsersList","isloading","selectedUser","newUnReadMessages","filteredUsersKeysArray","originalUsersObject","filter","toLowerCase","includes","filteredUsersAsObject","forEach","handleWindowClose","ev","doSomethingBeforeUnload","UsersSystem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0771e8c8.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyBEbDR2aZ7KnkdbY0qEmc8essiDqi2nBjw\",\n\tauthDomain: \"chat-9b1a6.firebaseapp.com\",\n\tdatabaseURL: \"https://chat-9b1a6.firebaseio.com\",\n\tprojectId: \"chat-9b1a6\",\n\tstorageBucket: \"chat-9b1a6.appspot.com\",\n\tmessagingSenderId: \"413541985347\",\n\tappId: \"1:413541985347:web:12063ffba5ceb23976f8f6\",\n\tmeasurementId: \"G-6TQGQDZH0M\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst database = firebase.database();\n\nconst USERS_COLLECTION_NAME = 'users';\nconst AGENTS_COLLECTION_NAME = 'agents';\nconst MESSAGES_COLLECTION_NAME = 'messages';\nconst CURRENT_USER = 'currentUser';\nconst CURRENT_AGENT = 'currentAgent';\nconst ONLINE_AGENT = 'onlineAgent';\nconst UN_READ_MESSAGES = 'unReadMessages';\n\nclass DBManager {\n\tstatic getSingleItem = (itemName) => {\n\t\treturn localStorage.getItem(itemName);\n\t}\n\n\tstatic setSingleItem = (itemName, newItem) => {\n\t\tlocalStorage.setItem(itemName, JSON.stringify(newItem));\n\t}\n\n\n\tstatic getUsers = (onNewUserAdded) => {\n\t\tdatabase.ref(USERS_COLLECTION_NAME).on('value', (snap) => {\n\t\t\tonNewUserAdded(\n\t\t\t\tsnap.val()\n\t\t\t);\n\t\t});\n\t}\n\n\n\t// static setUsers = (users) => {\n\t// \treturn database.ref(USERS_COLLECTION_NAME).set(users);\n\t// }\n\n\tstatic createNewUser = (user) => {\n\t\treturn database.ref(USERS_COLLECTION_NAME).push(user).then((snap) => {\n\t\t\treturn {\n\t\t\t\t...user,\n\t\t\t\tid: snap.key\n\t\t\t};\n\t\t});\n\n\t\t// const array = [];\n\t\t// array.push(1)\n\t}\n\n\n\tstatic registerToNewMessages = (userId, onNewMessageAdded) => {\n\t\tdatabase.ref(`chats/${userId}/${MESSAGES_COLLECTION_NAME}`).on('value', (snap) => {\n\t\t\tonNewMessageAdded(\n\t\t\t\tsnap.val()\n\t\t\t);\n\t\t});\n\t}\n\n\tstatic setMessages = (userId, messages) => {\n\t\treturn database.ref(`chats/${userId}/${MESSAGES_COLLECTION_NAME}`).set(messages);\n\t}\n\n\tstatic setUnReadMessages = (userId, messages) => {\n\t\treturn database.ref(`chats/${userId}/${UN_READ_MESSAGES}`).set(messages);\n\t}\n\n\tstatic getUnReadMessages = (userId, onNewMessageAdded) => {\n\t\tdatabase.ref(`chats/${userId}/${UN_READ_MESSAGES}`).on('value', (snap) => {\n\t\t\tonNewMessageAdded(\n\t\t\t\tsnap.val()\n\t\t\t);\n\t\t});\n\t}\n\n\t// static setIsAgentLoggedIn = (agent) =>{\n\t// \treturn database.ref(AGENTS_COLLECTION_NAME).set(agent);\n\t// }\n\n\n\tstatic getIsAgentLoggedIn = (callback) => {\n\t\t// https://firebase.google.com/docs/auth/web/manage-users\n\t\t// firebase.auth().onAuthStateChanged(function(user) {\n\t\t// \tif (user) {\n\t\t// \t// User is signed in.\n\t\t// \t} else {\n\t\t// \t// No user is signed in.\n\t\t// \t}\n\t\t// });\n\t\tfirebase.auth().onAuthStateChanged(callback);\n\t}\n\n\tstatic getCurrentUser = () => {\n\t\treturn DBManager.getSingleItem(CURRENT_USER);\n\t}\n\tå\n\n\tstatic setCurrentUser = (newUser) => {\n\t\tDBManager.setSingleItem(CURRENT_USER, newUser);\n\t}\n\n\t// static setCurrentAgent = (newAgent) => {\n\t// \tDBManager.setSingleItem(CURRENT_AGENT, newAgent);\n\t// }\n\n\tstatic loginWithEmailAndPassword = (email, password) => {\n\t\treturn firebase.auth().signInWithEmailAndPassword(\n\t\t\temail,\n\t\t\tpassword\n\t\t);\n\t}\n\n\tstatic setOnlineAgent = (agent) => {\n\t\treturn database.ref(ONLINE_AGENT).set(agent);\n\t}\n\n\tstatic getOnlineAgent = (onAgentLogin) => {\n\t\tdatabase.ref(ONLINE_AGENT).on('value', (snap) => {\n\t\t\tonAgentLogin(\n\t\t\t\tsnap.val()\n\t\t\t);\n\t\t});\n\t}\n\n\tstatic getAgents = () => {\n\t\tconst promise = database.ref(AGENTS_COLLECTION_NAME).once('value').then((snap) => {\n\t\t\treturn snap.val() || {};\n\t\t});\n\t\treturn promise;\n\t}\n\n\tstatic getCurrentAgent = (email) => {\n\t\treturn DBManager.getAgents().then(agents => {\n\t\t\tconst agentKey = Object.keys(agents).find((currentKey) => {\n\t\t\t\tconst currentAgent = agents[currentKey];\n\t\t\t\treturn email === currentAgent.email;\n\t\t\t});\n\t\t\treturn agents[agentKey];\n\t\t});\n\t}\n\n\n\tstatic createNewAgentUser = (agent) => {\n\t\tconst { email, password } = agent;\n\n\t\treturn firebase.auth().createUserWithEmailAndPassword(\n\t\t\temail,\n\t\t\tpassword\n\t\t).then(() => {\n\t\t\tconsole.log('agent', agent);\n\t\t\tdatabase.ref(AGENTS_COLLECTION_NAME).push(agent);\n\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log('Error creating new user:', error.cose);\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\tstatic logoutUser = () => {\n\t\treturn firebase.auth().signOut();\n\t}\n}\n\nexport default DBManager;\n","import React, { Component } from 'react';\n\nimport DBManager from './DBManager';\n\nclass Chat extends Component {\n  state = {\n    isChatWindowOpen: false,\n    valueInput: '',\n    messages: [],\n    unReadMessages: {},\n  }\n\n  componentDidMount() {\n    if (this.props.owner) {\n      this.registerToNewMessages(this.props.owner.id);\n    }\n\n    if (this.props.shouldStartOpen) {\n      this.setState({ isChatWindowOpen: true });\n    }\n  }\n\n  registerToNewMessages = (ownerId) => {\n    const onNewMessageAdded = (messagesFromServer) => {\n      const isWithAnimation = this.state.messages.length !== 0;\n\n      this.setState({ messages: messagesFromServer || [] }, () => {\n        this.scrollChatToEnd(isWithAnimation);\n      });\n\n      // this.setState({messages: messagesFromServer || []});\n      // this.scrollChatToEnd(isWithAnimation);\n    }\n\n    DBManager.registerToNewMessages(ownerId, onNewMessageAdded);\n  }\n\n  toggleChatWindow = () => {\n    if (this.state.isChatWindowOpen && this.props.currentOnlineAgent === null) {\n      return this.setState({ isChatWindowOpen: false });\n    } else if (!this.props.currentOnlineAgent) {\n      return alert('אנא המתן לנציג צאט שהתפנה');\n    } else if (this.props.currentOnlineAgent === 'busy') {\n      return alert('נציג מיד התפנה');\n    }\n\n\n    let userName;\n\n    if (!this.state.isChatWindowOpen && !this.props.owner) {\n      userName = prompt(\"Please enter your name\");\n    }\n    else if (!this.state.isChatWindowOpen && this.props.owner) {\n      return this.setState({ isChatWindowOpen: true });\n    }\n    else {\n      this.setState({ isChatWindowOpen: false });\n\n      return this.setState({ owner: this.props.owner });\n    }\n\n    if (userName !== null) {\n      const newUser = {\n        name: userName,\n      }\n      this.setState({ isChatWindowOpen: true }, () => {\n        this.scrollChatToEnd();\n      });\n\n\n      DBManager.createNewUser(newUser).then(user => {\n        this.props.updateCurrentUser(user);\n        this.setState({ owner: user }, () => {\n          this.addNewMessage(`?שלום ${userName}, איך אפשר לעזור`);\n        });\n      });\n    }\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 13 && e.target.value !== '') {\n      e.preventDefault();\n      this.addNewMessage(this.inputValueElement.innerText);\n      this.inputValueElement.innerHTML = '';\n    }\n  }\n\n  addNewMessage = (message) => {\n    const { owner } = this.props;\n    const { messages } = this.state;\n    const time = (new Date()).toISOString();\n\n    if (messages.length === 0 || this.props.isAgent) {\n      let messageOwner;\n\n      messageOwner = {\n        name: 'Agent'\n      }\n\n      const newMessage = {\n        text: message,\n        time: time,\n        owner: messageOwner\n      }\n\n      DBManager.setMessages(owner.id, [...messages, newMessage])\n        .then(() => {\n          this.registerToNewMessages(owner.id);\n        })\n\n    }\n    else if (this.props.currentOnlineAgent) {\n      let messageOwner;\n\n      messageOwner = owner;\n\n      const newMessage = {\n        text: message,\n        time: time,\n        owner: messageOwner,\n      }\n\n      DBManager.setMessages(owner.id, [...messages, newMessage]);\n      DBManager.setUnReadMessages(owner.id, [...messages, newMessage]);\n      const newUnReadMessage = {\n        ...this.state.unReadMessages,\n        [messageOwner.name]: message || []\n      };\n\n      this.setState({ unReadMessages: newUnReadMessage });\n    }\n\n\n    else {\n      let messageOwner;\n\n      if (this.props.isAgent) {\n        messageOwner = {\n          name: 'Agent'\n        }\n      }\n\n      else {\n        messageOwner = owner;\n      }\n\n      const newMessage = {\n        text: message,\n        time: time,\n        owner: messageOwner,\n      }\n\n      alert('השיחה עם הנציג נגמרה');\n    }\n  }\n\n  inputValueRef = (inputValueElement) => {\n    this.inputValueElement = inputValueElement;\n  }\n\n  setMessageContainerRef = (messagesContainerElement) => {\n    this.messagesContainerElement = messagesContainerElement;\n  }\n\n\n  scrollChatToEnd = (isWithAnimation) => {\n    if (!this.messagesContainerElement) {\n      return;\n    }\n\n    const options = { top: this.messagesContainerElement.scrollHeight, left: 0 };\n\n    if (isWithAnimation) {\n      options.behavior = 'smooth';\n    }\n\n    this.messagesContainerElement.scrollTo(options);\n  }\n\n\n  render() {\n    const {\n      isChatWindowOpen,\n      messages,\n    } = this.state;\n\n    const onlineOrOfflineAgent = 'agent-online-or-offline ' +\n      (this.props.currentOnlineAgent && this.props.currentOnlineAgent !== 'busy' && 'online'\n        || this.props.currentOnlineAgent === 'busy' && 'busy');\n\n    return (\n      <div className=\"chat-container\">\n        <div className=\"open-chat-button\" onClick={this.toggleChatWindow}>\n          {this.props.currentOnlineAgent && this.props.currentOnlineAgent !== 'busy' && <div className=\"online-message\"> online</div>}\n          {!this.props.currentOnlineAgent && <div className=\"offline-message\">offline</div>}\n          {this.props.currentOnlineAgent === 'busy' && <div className=\"busy-message\">busy</div>}\n          <div className={onlineOrOfflineAgent}></div>\n        </div>\n\n        <div className={`chat-window ${isChatWindowOpen ? 'visible' : ''}`}>\n          <div className=\"chat-header\">צ׳אט תמיכה</div>\n          <div className=\"messages-container\" ref={this.setMessageContainerRef}>\n\n            {messages.map((message, index) => {\n              let textClassName = 'message-text ';\n              const isAgentMessage = !message.owner.id;\n              textClassName = textClassName + (isAgentMessage && 'message-text-Agent');\n\n              return <div className={`users-messages ${message.owner.name}`} key={index}> <div className={textClassName} >{message.text}</div></div>\n            })}\n          </div>\n          <div className=\"chat-input\" contentEditable='true' ref={this.inputValueRef} onKeyDown={this.handleKeyDown}></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chat;","import React, { Component } from 'react';\n\nimport Chat from './Chat';\nimport DBManager from './DBManager';\n\nclass SomeWebsite extends Component {\n\tstate = {\n\t\towner: DBManager.getCurrentUser(),\n\t\tcurrentOnlineAgent: null,\n\t}\n\n\tcomponentDidMount() {\n\t\tconst onAgentLogin = (onlineAgent) => {\n\t\t\tthis.setState({ currentOnlineAgent: onlineAgent });\n\t\t}\n\n\t\tDBManager.getOnlineAgent(onAgentLogin);\n\t}\n\n\tupdateCurrentUser = (currentUser) => {\n\t\tDBManager.setCurrentUser(currentUser);\n\t\tthis.setState({ owner: currentUser });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"some-website-container\">\n\t\t\t\t<div className=\"logo\"></div>\n\n\t\t\t\t<Chat updateCurrentUser={this.updateCurrentUser} owner={this.state.owner} currentOnlineAgent={this.state.currentOnlineAgent} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SomeWebsite;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport DBManager from './DBManager';\n\nclass LoginForm extends Component {\n\tstate = {\n\t\temail: '',\n\t\tpassword: '',\n\t\tvalidationError: null,\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', (e) => {\n\t\t\tif (e.keyCode === 13) {\n\t\t\t\tthis.login();\n\t\t\t}\n\t\t});\n\t}\n\n\tlogin = () => {\n\t\tconst { email, password } = this.state;\n\n\t\tif (!password || !email) {\n\t\t\tthis.setState({ validationError: 'אנא ודא כי כל השדות מלאים' });\n\t\t}\n\n\t\tDBManager.loginWithEmailAndPassword(email, password)\n\t\t\t.then(() => {\n\t\t\t\tthis.props.history.push('/users/List');\n\t\t\t\tDBManager.setOnlineAgent(email);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthis.setState({ validationError: 'נסה שוב' });\n\t\t\t});\n\t}\n\n\tcreateHandleFieldChange = (fieldName) => {\n\t\treturn (e) => {\n\t\t\tthis.setState({ [fieldName]: e.target.value });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"form-container\">\n\t\t\t\t<div className=\"title\">התחבר באמצעות כתובת המייל שלך</div>\n\t\t\t\t<div className=\"form\">\n\t\t\t\t\t{this.state.validationError && <div className=\"error-message\">{this.state.validationError}</div>}\n\t\t\t\t\t<input onChange={this.createHandleFieldChange('email')} className=\"email-input input\" type=\"text\" placeholder=\"כתובת מייל\" />\n\t\t\t\t\t<input onChange={this.createHandleFieldChange('password')} className=\"password-input input\" type=\"password\" placeholder=\"סיסמא\" />\n\t\t\t\t\t<div onClick={this.login} className=\"submit-button\" id=\"login-button\">התחבר</div>\n\n\t\t\t\t\t<Link to=\"/agents/register\">\n\t\t\t\t\t\t<div id=\"register-button\" className=\"secondary-button\">או צור משתמש</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default LoginForm;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport DBManager from './DBManager';\n\nclass RegisterForm extends Component {\n\tstate = {\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tpasswordConfirmation: '',\n\t\tvalidationError: null,\n\t\t// currentAgent:null,\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('keydown', (e) => {\n\t\t\tif (e.keyCode === 13) {\n\t\t\t\tthis.createNewAccount();\n\t\t\t}\n\t\t});\n\t}\n\n\n\tcreateNewAccount = () => {\n\t\tconst {\n\t\t\tfirstName,\n\t\t\tlastName,\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tpasswordConfirmation\n\t\t} = this.state;\n\n\t\tif (!firstName || !lastName || !email || !password || !passwordConfirmation) {\n\t\t\treturn this.setState({ validationError: 'יש למלא את כל השדות!' });\n\t\t}\n\n\t\tif (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\n\t\t\treturn this.setState({ validationError: 'יש להזין כתובת מייל תקינה!' });\n\t\t}\n\n\t\tif (password !== passwordConfirmation) {\n\t\t\treturn this.setState({ validationError: 'הסיסמאות לא תואמות!' });\n\t\t}\n\n\t\tif (password.length < 6) {\n\t\t\treturn this.setState({ validationError: 'סיסמא צריכה להיות בת 6 ספרות' })\n\t\t}\n\n\t\tconst user = {\n\t\t\tfullName: `${firstName} ${lastName}`,\n\t\t\temail: email,\n\t\t\tpassword: password\n\t\t}\n\n\t\t// DBManager.setNameByEmail(email,firstName);\n\t\t// DBManager.setCurrentAgent(user);\n\t\t// this.setState({currentAgent:user});\n\n\t\tDBManager.createNewAgentUser(user).then(() => {\n\t\t\tthis.props.history.push('/agents/login');\n\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log('erorrrrrrr');\n\t\t\t});\n\t}\n\n\tcreateHandleFieldChange = (fieldName) => {\n\t\treturn (e) => {\n\t\t\tthis.setState({ [fieldName]: e.target.value });\n\t\t}\n\t}\n\n\trender() {\n\t\t// console.log('this.state.currentAgent', this.state.currentAgent);\n\t\treturn (\n\t\t\t<div className=\"form-container\">\n\t\t\t\t<div className=\"title\">צור משתמש חדש</div>\n\t\t\t\t<div className=\"form\">\n\t\t\t\t\t{this.state.validationError && <div className=\"error-message\">{this.state.validationError}</div>}\n\t\t\t\t\t<input onChange={this.createHandleFieldChange('firstName')} className=\"name-input input\" type=\"text\" placeholder=\"שם פרטי\" />\n\t\t\t\t\t<input onChange={this.createHandleFieldChange('lastName')} className=\"last-name-input input\" type=\"text\" placeholder=\"שם משפחה\" />\n\t\t\t\t\t<input onChange={this.createHandleFieldChange('email')} className=\"email-input input\" type=\"text\" placeholder=\"כתובת מייל\" />\n\t\t\t\t\t<input onChange={this.createHandleFieldChange('password')} className=\"password-input input\" type=\"password\" placeholder=\"סיסמא\" />\n\t\t\t\t\t<input onChange={this.createHandleFieldChange('passwordConfirmation')} className=\"confirm-password-input input\" type=\"password\" placeholder=\"אימות סיסמא\" />\n\t\t\t\t\t<div className=\"submit-button\" onClick={this.createNewAccount}> סיימתי, צור משתמש!</div>\n\t\t\t\t\t<Link to=\"/agents/login\">\n\t\t\t\t\t\t<div id=\"login-button\" className=\"secondary-button\"> אני כבר רשום </div>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RegisterForm;","import React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport LoginForm from './LoginForm';\nimport RegisterForm from './RegisterForm';\nimport DBManager from './DBManager';\n\nclass AgentSystem extends Component {\n\n\trender() {\n\t\tconst { match } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"agent-system-container\">\n\t\t\t\t<Route path={`${match.path}/login`} component={LoginForm} />\n\t\t\t\t<Route path={`${match.path}/register`} component={RegisterForm} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AgentSystem;","import React, { Component } from 'react';\n\nclass Loading extends Component {\n\trender() {\n\t\tconst { text } = this.props;\n\t\tconst defaultText = 'טוען...';\n\n\t\treturn (<div className=\"loading\">{text || defaultText}<span role=\"img\" aria-label=\"clock\">⏰</span></div>);\n\t}\n}\n\nexport default Loading;","import React, { Component } from 'react';\n\nclass UserItem extends Component {\n\trender() {\n\t\tconst { index,\n\t\t\tuser,\n\t\t\tmessagesClass,\n\t\t\titem,\n\t\t\tmessages\n\t\t} = this.props;\n\n\n\t\treturn (\n\t\t\t<div className=\"user-link-container\" style={{ backgroundImage: `url(https://randomuser.me/api/portraits/men/${index + 1}.jpg)` }} onClick={() => this.props.onUserClicked(user)} >\n\t\t\t\t{messages[user] && <div className={messagesClass}>{messages[user].length} </div>}\n\t\t\t\t<div className=\"user-details-container\">\n\t\t\t\t\t<div className=\"name\">{item.name}</div>\n\t\t\t\t\t<span className=\"all-Item\">\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t);\n\n\t}\n}\n\nexport default UserItem;","import React, { Component } from 'react';\n\nimport UserItem from './UserItem';\n\nclass UsersListContainer extends Component {\n\trender() {\n\t\tconst {\n\t\t\tusers,\n\t\t\tunReadMessages,\n\t\t} = this.props;\n\n\t\t// console.log('unReadMessages', unReadMessages);\n\t\treturn (\n\t\t\tObject.keys(users).map((user, index) => {\n\t\t\t\tconst item = users[user];\n\t\t\t\tlet messagesClass = '';\n\n\t\t\t\tif (unReadMessages[user]) {\n\t\t\t\t\tmessagesClass = 'messages-number ' + (unReadMessages[user].length > 0 && 'unReadMessages');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmessagesClass = 'messages-number';\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<UserItem users={this.props.users} key={index} user={user} index={index} item={item} messagesClass={messagesClass} messages={this.props.messages} onUserClicked={this.props.onUserClicked} />\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}\n}\n\nexport default UsersListContainer;","import React, { Component } from 'react';\n\nimport UsersListContainer from './UsersListContainer';\n\n\nclass UsersListAndSearch extends Component {\n\n\trender() {\n\t\tconst {\n\t\t\tusers,\n\t\t\tvalueInput\n\t\t} = this.props;\n\n\n\t\treturn (\n\t\t\t<div className=\"users-list\">\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"list-input\"\n\t\t\t\t\tplaceholder=\"חפש משתמשים\"\n\t\t\t\t\tonChange={this.props.handleChange}\n\t\t\t\t\tvalue={valueInput}>\n\t\t\t\t</input>\n\t\t\t\t{users ?\n\t\t\t\t\t<div className=\"list-container\">\n\t\t\t\t\t\t<UsersListContainer users={this.props.users} messages={this.props.messages} unReadMessages={this.props.unReadMessages} onUserClicked={this.props.onUserClicked} />\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div className=\"no-users\">אין משתמשים פעילים</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UsersListAndSearch;","import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\n\nimport DBManager from './DBManager';\nimport Loading from './Loading';\nimport Chat from './Chat';\nimport UsersListAndSearch from './UsersListAndSearch';\n\nclass UsersList extends Component {\n\tstate = {\n\t\tusers: {},\n\t\tvalueInput: '',\n\t\tisloading: false,\n\t\tselectedUser: null,\n\t\tmessages: {},\n\t\tunReadMessages: {},\n\t\tagent: null,\n\t}\n\n\tcomponentDidMount() {\n\t\tDBManager.getIsAgentLoggedIn((agent) => {\n\t\t\tif (!agent) {\n\t\t\t\tDBManager.setOnlineAgent(null);\n\t\t\t\tthis.props.history.push('/agents/login');\n\t\t\t} else {\n\t\t\t\tDBManager.setOnlineAgent('online');\n\t\t\t}\n\t\t})\n\t\tthis.handleWindowClose();\n\n\t\tthis.setState({ isloading: true });\n\t\tconst onNewUserAdded = (users) => {\n\t\t\tthis.setState({ users });\n\t\t\tthis.setState({ isloading: false });\n\t\t\tthis.originalUsersObject = users;\n\t\t\tif (users) {\n\t\t\t\tObject.keys(users).forEach(currentKey => {\n\t\t\t\t\tthis.unReadMessages(currentKey);\n\n\t\t\t\t\tconst onNewMessageAdded = (messagesFromServer) => {\n\n\t\t\t\t\t\tconst messages = {\n\t\t\t\t\t\t\t...this.state.messages,\n\t\t\t\t\t\t\t[currentKey]: messagesFromServer || []\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.setState({ messages: messages });\n\n\t\t\t\t\t}\n\t\t\t\t\tDBManager.registerToNewMessages(currentKey, onNewMessageAdded);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tDBManager.getUsers(onNewUserAdded);\n\t}\n\n\tunReadMessages = (ownerId) => {\n\t\tconst onNewMessageAdded = (newUnReadMessages) => {\n\t\t\tconst unReadMessages = {\n\t\t\t\t...this.state.unReadMessages,\n\t\t\t\t[ownerId]: newUnReadMessages || []\n\t\t\t};\n\n\t\t\tthis.setState({ unReadMessages: unReadMessages || [] });\n\t\t\tconst { selectedUser } = this.state;\n\t\t\tif (selectedUser && selectedUser.id === ownerId) {\n\t\t\t\tthis.onUserClicked(selectedUser.id);\n\t\t\t}\n\t\t}\n\t\tDBManager.getUnReadMessages(ownerId, onNewMessageAdded);\n\n\t}\n\n\t// numberOfUnreadMessages = () =>{\n\t// \tconsole.log('numberOfUnreadMessages');\n\t// \tconst {messages} = this.state;\n\t// \tObject.keys(messages).forEach(currentKey => {\n\t// \t\tconsole.log('currentKey', currentKey);\n\t// \t\tconsole.log('messages', messages);\n\t// \t});\t\n\t// }\n\n\thandleChange = (e) => {\n\t\tthis.setState({ valueInput: e.target.value });\n\n\t\tif (this.state.users) {\n\t\t\tconst filteredUsersKeysArray = Object.keys(this.originalUsersObject).filter((key, index) => {\n\t\t\t\tconst item = this.originalUsersObject[key];\n\t\t\t\treturn item.name.toLowerCase().includes(e.target.value.toLowerCase());\n\t\t\t});\n\n\n\t\t\tconst filteredUsersAsObject = {};\n\n\t\t\tfilteredUsersKeysArray.forEach(currentKey => {\n\t\t\t\tconst item = this.originalUsersObject[currentKey];\n\t\t\t\tfilteredUsersAsObject[currentKey] = item;\n\t\t\t});\n\n\t\t\tthis.setState({ users: filteredUsersAsObject });\n\t\t}\n\t}\n\n\n\tonUserClicked = (key) => {\n\t\tconst { users } = this.state;\n\t\tconst currentUser = {\n\t\t\tname: users[key].name,\n\t\t\tid: key\n\t\t};\n\n\t\tthis.setState({ selectedUser: null }, () => {\n\t\t\tthis.setState({ selectedUser: currentUser })\n\t\t});\n\n\t\tDBManager.setUnReadMessages(key, []);\n\t}\n\n\n\n\thandleWindowClose = () => {\n\t\twindow.addEventListener(\"beforeunload\", (ev) => {\n\t\t\tev.preventDefault();\n\t\t\treturn this.doSomethingBeforeUnload();\n\t\t});\n\t}\n\n\n\tdoSomethingBeforeUnload = () => {\n\t\tDBManager.setOnlineAgent('busy');\n\t}\n\n\n\trender() {\n\t\tconst { isloading, selectedUser } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"listUsers-container\">\n\t\t\t\t{isloading ?\n\t\t\t\t\t<Loading text=\"טוען משתמשים...\" />\n\t\t\t\t\t:\n\t\t\t\t\t<>\n\t\t\t\t\t\t<UsersListAndSearch users={this.state.users} unReadMessages={this.state.unReadMessages} messages={this.state.messages} valueInput={this.state.valueInput}\n\t\t\t\t\t\t\tcurrentAgent={this.state.currentAgent} onUserClicked={this.onUserClicked} handleChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{selectedUser && <Chat owner={selectedUser} isAgent={true} messages={this.state.messages} currentOnlineAgent={true} shouldStartOpen={true} />}\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UsersList;\n","import React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport UsersList from './UsersList';\nimport DBManager from './DBManager';\nimport './UsersSystem.css'\n\nclass UsersSystem extends Component {\n\tstate = {\n\t\tagent: null\n\t}\n\n\tcomponentDidMount() {\n\t\tDBManager.getIsAgentLoggedIn((user) => {\n\t\t\tconst { email } = user;\n\n\t\t\tDBManager.getCurrentAgent(email).then(currentAgent => {\n\t\t\t\tthis.setState({ agent: currentAgent })\n\t\t\t});\n\t\t})\n\t}\n\n\tlogoutUser = () => {\n\t\tDBManager.logoutUser().then(() => {\n\t\t\tDBManager.getIsAgentLoggedIn((user) => {\n\t\t\t\tif (!user) {\n\t\t\t\t\tthis.setState({ agent: null });\n\t\t\t\t\tthis.props.history.push('/agents/login');\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { match } = this.props;\n\t\tconst { agent } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"users-system-container\">\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t{agent && <div className=\"hello-user-message\">שלום, {agent.fullName}</div>}\n\t\t\t\t\t<span>מערכת לניהול משתמשים</span>\n\t\t\t\t\t{agent && <div className=\"logout-button\" onClick={this.logoutUser}>התנתק</div>}\n\t\t\t\t</div>\n\t\t\t\t<Route path={`${match.path}/List`} component={UsersList} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UsersSystem;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport SomeWebsite from './SomeWebsite';\nimport AgentSystem from './AgentSystem';\nimport UsersSystem from './UsersSystem';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Switch>\n            <Route path=\"/agents\" component={AgentSystem}>\n            </Route>\n            <Route path=\"/users\" component={UsersSystem}>\n            </Route>\n            <Route path=\"/\" component={SomeWebsite}>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}